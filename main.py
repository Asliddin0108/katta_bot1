from telethon import TelegramClient, events, Buttonfrom telethon.tl.types import Userfrom datetime import datetimeimport re, os, traceback, tempfilefrom functools import lru_cache  # ‚úÖ lru_cache import qilindi# üîê API ma'lumotlariapi_id = 23270290api_hash = "d56121a4f2dca2210efaeed19aa31ecb"client = TelegramClient("bot1_openA", api_id, api_hash)# üõ° Railway uchun instance nazoratilock_path = os.path.join(tempfile.gettempdir(), "bot.lock")if os.environ.get("RAILWAY_INSTANCE") and os.path.exists(lock_path):    print("‚ùå Oldingi instance ishlayapti, chiqyapti...")    exit()else:    open(lock_path, "w").close()# üîÅ Guruhlarni alohida handler bilan kuzatishdef setup_group_handlers(client, SOURCE_CHAT_IDS, process_message):    for chat_id in SOURCE_CHAT_IDS:        def create_handler(chat_id):            @client.on(events.NewMessage(chats=chat_id))            async def handler(event):                await process_message(event)            return handler        create_handler(chat_id)# üü¢ Guruhlar va linklarSOURCE_CHAT_IDS = [    -1002265777216, -1002164015195, -1002826041687, -1001478722034, -1002553403339,    -1002347876726, -1002458821335, -1002142234124, -1002438357334, -1002440632307,    -1001785340604, -1001772298511, -1001662551358, -1001919108125, -1002046930439,    -1002364464921, -1001753599449, -1002010136955, -1001826631123, -1002622375613,    -1002070629526, -1001862853132, -1001831780698, -1001611162325, -1002408725338,    -1001598133468, -1002285680811, -1002223112284, -1001593326810, -1002241820943,    -1001664391604, -1001983802342, -1001728377618, -1001335283645, -1001151786413,    -1001433669620, -1001548912251, -1002400797687, -1001916489240, -1001938069696,    -1002618722089, -1001664505966, -1001798390420, -1001832434183, -1001956670988,    -1001211288673, -1001514705110, -1001947135679, -1001910539086, -1001616995835,    -1002319508275, -1001891380523, -1002407590575, -1001675691028, -1001822987973]GROUP_LINKS = {    -1002265777216: "https://t.me/toshkent_namangan_taksi",    -1002164015195: "https://t.me/namangan_toshkent_taxi_1250",    -1002826041687: "https://t.me/Vijdontaxi",    -1001478722034: "https://t.me/chortoq_uychi_toshkent",    -1002553403339: "https://t.me/namangan_tosh_uzb",    -1002347876726: "https://t.me/Toshkent_namangan_student_gurpa",    -1002458821335: "https://t.me/uychi_chortoq_toshkent11",    -1002142234124: "https://t.me/Toshkent_vodiy_student_taxi",    -1002438357334: "https://t.me/toshkent_namangan699",    -1002440632307: "https://t.me/UychiChortoqNamanganToshkenttaxi",    -1001785340604: "https://t.me/taksi_toshkent_jamashuy_taxi",    -1001772298511: "https://t.me/Yangiqorgon_toshkent_chortoq",    -1001662551358: "https://t.me/namangantoshkenttak",    -1001919108125: "https://t.me/Vodiy_Toshkent_taxi_xizmatiN1",    -1002046930439: "https://t.me/Koroskon_Toshkent",    -1002364464921: "https://t.me/TagijarToshkentTaksiXizmarlari",    -1001753599449: "https://t.me/uychichortoqtaksi",    -1002010136955: "https://t.me/VODIY_TAKSI_XIZMATI",    -1001826631123: "https://t.me/TOSHKENT_VODIY_TAKSILARI",    -1002622375613: "https://t.me/Chortoqtoshkenttaxi",    -1002070629526: "https://t.me/Yangiqurgon_Toshkent",    -1001862853132: "https://t.me/taxi_uz_namangan_toshkent",    -1001831780698: "https://t.me/Namangan_Yangiqorgon_Toshkentd",    -1001611162325: "https://t.me/NAMANGAN_TOSHKENT2",    -1002408725338: "https://t.me/namangan24tashkent24",    -1001598133468: "https://t.me/toshkent_uchqorgon_uychi_405",    -1002285680811: "https://t.me/NAMANGAN_TOSHKENT_13",    -1002223112284: "https://t.me/toshkentnamangantaksiy",    -1001593326810: "https://t.me/universaltoshkentpetak",    -1002241820943: "https://t.me/CHORTOQTOSHKENTYANGIQURGONUYCHI",    -1001664391604: "https://t.me/Taxsi_Namangan",    -1001983802342: "https://t.me/toshkent_namangan2",    -1001728377618: "https://t.me/Toshkent_Namangan_Yangiqorg",    -1001335283645: "https://t.me/Namangan_Toshkentt_Taxi",    -1001151786413: "https://t.me/Namangan_Toshkent_taxii_n1",    -1001433669620: "https://t.me/namangantoshkent24",    -1001548912251: "https://t.me/NAMANGAN_TOSHKENT_TAKSIS",    -1002400797687: "https://t.me/toshkent_namangan_uychi_taksi_1",    -1001916489240: "https://t.me/NAMANGA_TORAQORGON_TOSHKENT",    -1001938069696: "https://t.me/NAMANGAN_TOSHKENT_TAKSI11",    -1002618722089: "https://t.me/UYCHI_CHORTOQ_TOSHKENT888",    -1001664505966: "https://t.me/namangan_toshkent_taxis",    -1001798390420: "https://t.me/toshkent_uychi",    -1001832434183: "https://t.me/toshkentchortoq24",    -1001956670988: "https://t.me/Namangan_Toshkenttt",    -1001211288673: "https://t.me/Chortoq_Yangiqurgon_Toshkent_tak",    -1001514705110: "https://t.me/namangan_tosh",    -1001947135679: "https://t.me/shopirlarbekobod",    -1001910539086: "https://t.me/TAXI_NAMANGAN_TOSHKENT_TAXI",    -1001616995835: "https://t.me/toshkent_chortoq",    -1002319508275: "https://t.me/Namangan_Toshkenttaxi1",    -1001891380523: "https://t.me/Uychi_toshkentt",    -1002407590575: "https://t.me/NAMANGANTOSHKENTM",    -1001675691028: "https://t.me/Toshkent_Zarkent_taksi",    -1001822987973: "https://t.me/Toshkent_Namangan_yonalishi"}from functools import lru_cacheimport re# üî§ Matnni tozalash va sozlash (optimallashtirilgan)def normalize_text(text):    text = text.lower()    text = re.sub(r'["‚Äú‚Äù‚Äô‚Äò`¬¥]', '', text)    text = re.sub(r'[.,!?\-]', '', text)    text = re.sub(r'\bbo\b', 'bor', text)    text = re.sub(r'\s+', ' ', text)    # Kirill ‚Üí Lotin transliteratsiya    text = text.replace("–∞", "a").replace("–±", "b").replace("–≤", "v").replace("–≥", "g").replace("–¥", "d")    text = text.replace("–µ", "e").replace("—ë", "yo").replace("–∂", "j").replace("–∑", "z").replace("–∏", "i")    text = text.replace("–π", "y").replace("–∫", "k").replace("–ª", "l").replace("–º", "m").replace("–Ω", "n")    text = text.replace("–æ", "o").replace("–ø", "p").replace("—Ä", "r").replace("—Å", "s").replace("—Ç", "t")    text = text.replace("—É", "u").replace("—Ñ", "f").replace("—Ö", "x").replace("—Ü", "ts").replace("—á", "ch")    text = text.replace("—à", "sh").replace("—â", "sh").replace("—ä", "").replace("—ã", "i").replace("—å", "")    text = text.replace("—ç", "e").replace("—é", "yu").replace("—è", "ya").replace("“õ", "q").replace("—û", "o‚Äò")    text = text.replace("“ì", "g‚Äò").replace("“≥", "h")    text = re.sub(r'\s+', ' ', text)    return text.strip()# üé§ Ovozlilikni aniqlashdef is_voice_message(event) -> bool:    if event.message.voice:        return True    if event.message.media and hasattr(event.message.media, 'document'):        mime = event.message.media.document.mime_type        return mime and mime.startswith("audio/")    return False# üìç Yo'nalishni aniqlashdef extract_direction(text: str) -> str:    text = text.lower()    directions = [        ("toshkent", "namangan", "Toshkent ‚û°Ô∏è Namangan", "Namangan ‚û°Ô∏è Toshkent"),        ("toshkent", "andijon", "Toshkent ‚û°Ô∏è Andijon", "Andijon ‚û°Ô∏è Toshkent"),        ("toshkent", "fargona", "Toshkent ‚û°Ô∏è Farg‚Äòona", "Farg‚Äòona ‚û°Ô∏è Toshkent"),        ("toshkent", "angren", "Toshkent ‚û°Ô∏è Angren", "Angren ‚û°Ô∏è Toshkent"),        ("toshkent", "qoqon", "Toshkent ‚û°Ô∏è Qo‚Äòqon", "Qo‚Äòqon ‚û°Ô∏è Toshkent"),    ]    for city1, city2, dir1, dir2 in directions:        if city1 in text and city2 in text:            return dir1 if text.find(city1) < text.find(city2) else dir2    return "Yo‚Äònalish aniqlanmadi"# ‚úÖ 1-daraja: reklama bloklashdef level_1_check(text):    blacklist = [        "1xbet", "stavka", "reklama", "admin", "konditsioner", "kondi", "bepul",        "kanalga azo", "obuna", "lotereya", "telegram", "bot", "stream", "youtube",        "instagram", "tiktok", "like bosing", "ish bor", "lichkaga yoz", "biznes",        "sotiladi", "kredit", "kurs", "konkurs", "promo", "chegirma", "to‚Äòlov asosida",        "rasmiy"    ]    patterns = [        r'http[s]?://', r'www\\.', r'@\w{3,}', r'\\.uz\\b|\\.com\\b|\\.ru\\b|\\.org\\b',        r'\w+@\w+\.\w+', r'\\bbot\\b', r'\\bjoin\\b', r'\\bchannel\\b'    ]    for word in blacklist:        if word in text:            return False    for pattern in patterns:        if re.search(pattern, text):            return False    return True# ‚ùå 2-daraja: haydovchi gaplarini bloklash (2 ta ro'yxat bilan)def level_2_check(text):    driver_phrases_main = [        "olib ketaman", "joy bor", "sherik kerak", "bo‚Äòsh joy", "yo‚Äòlman",        "yuryapmiz", "yuramiz", "1ta kam", "2ta kam", "3ta kam",        "1 kam", "2 kam", "1kam", "kamdamiz", "kam", "oldi bosh",        "jentra", "kimga kerak", "pochta kerak", "pochta olaman", "pochta olamiz",        "yuk olib ketaman", "olib chiqaman", "komu nado", "moshina kaptiva", "lasetti", "avto",        "konditsioner", "kondi", "kandissaner", "kanditsaner", "ayol kishi bor", "haydovchi", "cobalt", "pochta olib ketaman", "pochta olaman", "pochta olamiz", "pochta olish", "1 kishi kerak", "2 kishi kerak", "3 kishi kerak", "4 kishi kerak", "1 odam migrim", "2 odam migrim", "3 odam migrim", "1 ta odam migrim", "2 ta odam migrim", "3 ta odam migrim", "migirim", "pochta migirim", "odam migirim" "pochtala", "pochchala", "pochtani olaman", "xarktdamz olaman", "olamiz", "bulsa olamiz", "olamiz"    ]    driver_phrases_extended = [        "odam olamiz", "olamiz", "po'shta olamiz", "poshta olamiz", "pochta olamiz",        "oldi mesta", "oldi joy", "oldi joy bor", "oldi mestaga",        "mashina bor", "moshina bor", "mashina komfort", "komfort", "kobolt", "kobalt",        "mashina kobalt", "mashina kaptiva", "captiva",        "mashina chiqdi", "moshina ketdi", "mashina ketayapti",        "lichkada", "lichkada yozing", "lichkada bor", "tel lichada",        "bosh joy", "joy ochiq", "joy qoldi",        "faqat ayollar", "ayollar bor", "ayol bor", "ayol kishi",        "mashina bekor", "mashina pustoy", "mashina bo‚Äòsh", "pustoy", "moshina bo‚Äòsh", "moshina pustoy", "olip ketamiz", "odam pochta olmz", "odam olmz", "pochta olmz", "xarakatdamiz", "yuramiz", "olaman", "olamiz", "yuraman", "bosa olamz", "bosa ketamz", "bosa yuramz"    ]    for phrase in driver_phrases_main + driver_phrases_extended:        if phrase in text:            return False    return True# üìè 3-daraja: minimal va maksimal uzunlikdef level_3_check(text):    return 5 <= len(text) <= 150 and len(text.split()) >= 2# ‚ùå 5-daraja: chatisma ziddiyatlarini filtrlashdef level_5_check(text):    return not ("bor" in text and ("ketamiz" in text or "chiqamiz" in text))# ‚ö†Ô∏è 6-daraja: shoshilinch ifodalarni yumshoq ruxsat@lru_cache(maxsize=512)def level_6_check(text):    driver_style_phrases = [        "ob-keliw", "obkelish", "obkelaman", "olib kelish", "olib ketish",        "yetib boraman", "kelib olaman",        "moshina chiqqan", "mashinada olib chiqaman", "pachta olib ketaman", "pochta olib ketaman",        "moshina bor", "ketayotgan moshina", "ketyapman", "bor ketamiz", "kanditsaner", "konditsaner"    ]    urgent_keywords = [        "tezda", "tezroq", "darrov", "srochna", "sroshna", "sroshniga", "srochno", "srochnoy", "srchna",        "zudlik bilan", "zudlikbln", "zudlikbn", "hoziroq", "shu zahoti", "vaqtida yetishishim kerak",        "bu vaqtda kerak", "darxol", "zamonida", "hozi chiqaman", "tez olib ketish", "tez olib borish",        "tez yetkaz", "tez yetkizish"    ]    return any(k in text for k in urgent_keywords)# üîç Yakuniy tekshiruv: qatlamlidef level_4_check(text):    passenger_keywords = [        "1ta odam bor", "2ta odam bor", "3ta odam bor", "4ta odam bor", "5ta odam bor",        "1 ta odam bor", "2 ta odam bor", "3 ta odam bor", "4 ta odam bor", "5 ta odam bor",        "1 kishi bor", "2 kishi bor", "3 kishi bor", "4 kishi bor", "5 kishi bor",        "bitta odam bor", "bitta kishi bor", "yolg'izman", "odamman bor", "faqat o'zim",        "odam bilan ketamiz", "men bilan odam bor", "odam bor", "odam topildi",        "1 kishi", "2 kishi", "3 kishi", "4 kishi", "5 kishi",        "1ta odam", "2ta odam", "3ta odam", "4ta odam", "5ta odam",        "odam", "kishi", "taksi kere", "1 tamiz", "2 tamiz", "3 tamiz", "4 tamiz", "5 tamiz", "ketish kerak"    ]    komplekt_keywords = [        "komplekt odam bor", "komplekt bor", "komplekt tayyor", "komplektmiz",        "komplekt tayyorman", "komplekt yo‚Äòlovchi", "komplekt yo‚Äòldaman", "odamlar tayyor",        "3ta odam tayyor", "to‚Äòliq komplekt bor", "ketovchi", "ketuvchi"    ]    intent_keywords = [        "chiqmoqchiman", "chiqdim", "yo‚Äòldaman", "tayyorman", "hozir chiqaman",        "hozir yo‚Äòldaman", "bugun ketamiz", "ertaga ketamiz", "kechqurun chiqamiz",        "tushda ketaman", "hozir ketish kerak", "ozgina kutyapman", "yo‚Äòlovchi kerak",        "birga ketamiz", "odam qidiryapman", "toshkentga boramiz", "namanganga boramiz", "taxi kerak"    ]    location_keywords = [        "toshkentdan odam bor", "toshkentdan chiqamiz", "namanganga odam bor",        "farg‚Äòonaga odam bor", "andijonga odam bor", "vodiyga odam bor",        "qo‚Äòqonga odam bor", "urganchga odam bor", "bekobodga odam bor",        "angrenga odam bor", "gulistonga odam bor", "samarqandga odam bor", "mawna kerak", "mashna kerak", "mowna kerak"    ]    contact_keywords = [        "raqam shu yerda", "aloqa raqam", "telefon raqam", "nomerim shu",        "menga yozing", "telegram raqam", "kontaktim", "shaxsiy raqam",        "bog‚Äòlaning", "aloqaga chiqing", "qo‚Äòng‚Äòiroq qiling", "menga telefon qiling", "pochta bor"    ]    safe_keywords = [        "ketishim kerak", "borishim kerak", "yetishim kerak", "tez yetishim kerak",        "yordam kerak", "kim bilan boraman", "kim bor", "kim chiqadi", "kim yuradi",        "chiqishim kerak", "chiqmoqchimiz", "boramiz", "birga chiqamiz", "yetib olay",        "odam kerak emas", "haydovchi kerak emas", "haydovchisiz boraman",        "yo‚Äòldamiz", "yo‚Äòlga chiqamiz", "yo‚Äòlovchi tayyor", "birga ketamiz",        "kim bor ketadigan", "klientman", "clientman", "klientman 1 kishi", "2 klient bor",        "klient bor", "klient tayyor", "aka bilan boramiz", "opam bilan chiqamiz",        "duxtirga boramiz", "bola bor", "ayol bor", "farzand bor", "ota bilan chiqamiz",        "onam bilan chiqamiz", "xotinim bilan", "familamiz bor", "kattalar bor",        "chiqishga tayyor", "bugun chiqsam yaxshi bo‚Äòladi", "yurishni niyat qildim"    ]    keywords = (        passenger_keywords +        komplekt_keywords +        intent_keywords +        location_keywords +        contact_keywords +        safe_keywords    )    return any(k in text for k in keywords)def is_valid_order(text):    text = normalize_text(text)    if not level_1_check(text): return False    if not level_2_check(text): return False    if not level_3_check(text): return False    if level_4_check(text): return True    if level_5_check(text) and level_6_check(text): return True    return False# üß≠ Maqsad guruhDEST_CHAT_ID = -1002627741058dest_entity = None# üì® Yangi xabarlar@client.on(events.NewMessage(chats=list(GROUP_LINKS.keys())))async def handler(event):    global dest_entity    try:        sender = await event.get_sender()        # üë§ User, Channel yoki boshqa turdagi senderni to'g'ri aniqlash        if not sender or getattr(sender, 'bot', False):            return        if isinstance(sender, User):            full_name = f"{sender.first_name or ''} {sender.last_name or ''}".strip() or "Ismi yo'q"            username = f"@{sender.username}" if sender.username else "Yo'q"            account_phone = getattr(sender, 'phone', "Yopiq akkaunt")        elif hasattr(sender, "title"):            full_name = sender.title or "Kanal"            username = "Yo'q"            account_phone = "Yopiq akkaunt"        else:            full_name = "Ismi yo'q"            username = "Yo'q"            account_phone = "Yopiq akkaunt"        # üì© Xabar matni        text = getattr(event.message, 'message', '') or getattr(event.message, 'caption', '') or ''        # üìÖ Sana / vaqt        sana = datetime.now().strftime("%Y-%m-%d")        vaqt = datetime.now().strftime("%H:%M")        # üìç Yo'nalish        yo_nalish = extract_direction(text)        # üì° Guruh manzili va linki        group_link = GROUP_LINKS.get(event.chat_id, "#")        group_tag = group_link.replace("https://t.me/", "@")        # üìû Telefon raqami ajratish        phones = re.findall(r'\d{9,}', text)        phone = phones[0] if phones else "Topilmadi"        # üîó Xabarga havola        msg_link = f"https://t.me/c/{str(event.chat_id)[4:]}/{event.id}"        # üé§ Ovozli xabar bo‚Äòlsa        if is_voice_message(event):            if not os.path.exists("voices"):                os.makedirs("voices")            file_path = await client.download_media(event.message.media, file=f"voices/{event.id}.ogg")            caption = f"""‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüì° Guruh: [{group_tag}]({group_link})üë§ Yozuvchi: [{username}](https://t.me/{sender.username}) ({full_name})üÜî ID: {sender.id}üì± Profil raqam: {account_phone}üìÖ Sana: {sana} | ‚è∞ {vaqt}üìç Yo‚Äònalish: {yo_nalish}üé§ Ovozli zakaz yuborildi.üìù Yozuvchi xabari: [Havola]({msg_link})‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"""            await client.send_file(dest_entity, file_path, caption=caption,                                   buttons=[Button.inline("üöó Zakaz olindi", b"taken")],                                   parse_mode="markdown")            os.remove(file_path)            return        # üßæ Matnli xabar filtrdan o‚Äòtkaziladi        if not is_valid_order(text):            return        formatted = f"""‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüì° Guruh: [{group_tag}]({group_link})üë§ Yozuvchi: [{username}](https://t.me/{sender.username}) ({full_name})üÜî ID: {sender.id}üì± Profil raqam: {account_phone}üìÖ Sana: {sana} | ‚è∞ {vaqt}üìç Yo‚Äònalish: {yo_nalish}üí¨ Xabar: {text}üìû Aloqa (Xabardan): {phone}üìù Yozuvchi xabari: [Havola]({msg_link})‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"""        await client.send_message(dest_entity, formatted,                                  buttons=[Button.inline("üöó Zakaz olindi", b"taken")],                                  parse_mode="markdown")    except Exception as e:        print("‚ùå Xatolik:", e)        traceback.print_exc()# ‚ñ∂Ô∏è Botni ishga tushirishasync def main():    global dest_entity    print("üöÄ Bot ishga tushmoqda...")    await client.start()    dest_entity = await client.get_entity(DEST_CHAT_ID)    print("‚úÖ Telegramga ulandi. Xabarlar kutilyapti...")    await client.run_until_disconnected()if __name__ == "__main__":    import asyncio    asyncio.run(main())